name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1

    - name: Setup VSTest
      uses: darenm/Setup-VSTest@v1

    - name: Navigate to Workspace
      run: cd $GITHUB_WORKSPACE

    - name: Restore Packages
      run: nuget restore

    - name: Build Solution
      run: |
        msbuild.exe ACT_Chat.sln /p:platform="Any CPU" /p:configuration="Release" 

    - name: Run ACT_ChatTests
      run: vstest.console.exe ACT_ChatTests\bin\Release\ACT_ChatTests.dll

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ACT Plugin
        path: ACT_Chat\bin\Release\ACT_Chat.dll
        if-no-files-found: error
        
        
#     - name: Build project # This would actually build your project, using zip for an example artifact
#       run: |
#         zip --junk-paths ACT_Chat ACT_Chat.dll
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./ACT_Chat.dll
        asset_name: ACT_Chat.dll
